import java.util.*;

class TargetSum {
    static int[] twoSum(int n, int[] nums, int target) {
        // Create a HashMap to store number and its index
        Map<Integer, Integer> map = new HashMap<>();

        for (int i = 0; i < n; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                // Return the indices as soon as a match is found
                return new int[]{map.get(complement), i};
            }
            map.put(nums[i], i); // Store current number with its index
        }

        // If no pair is found, return an empty array or handle appropriately
        return new int[]{-1, -1};
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt(); // Size of the array
        int arr[] = new int[n];

        for (int i = 0; i < n; i++)
            arr[i] = in.nextInt(); // Array elements

        int target = in.nextInt(); // Target value

        int[] ans = twoSum(n, arr, target);
        System.out.println("(" + ans[0] + " , " + ans[1] + ")");
    }
}