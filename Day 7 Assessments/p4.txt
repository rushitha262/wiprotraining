import java.util.*;

public class DataAnalyzer<T extends Number & Comparable<T>> {
    private T[] data;

    // Constructor
    public DataAnalyzer(T[] data) {
        this.data = data;
    }

    // Method to calculate average
    public double calculateAverage() {
        double sum = 0.0;
        for (T value : data) {
            sum += value.doubleValue(); // Safe conversion from Number to double
        }
        return sum / data.length;
    }

    // Method to find maximum value
    public T findMaximum() {
        T max = data[0];
        for (T value : data) {
            if (value.compareTo(max) > 0) {
                max = value;
            }
        }
        return max;
    }

    // Already given
    public void dataSummary() {
        System.out.println("Data Summary:");
        System.out.println("Average: " + calculateAverage());
        System.out.println("Maximum: " + findMaximum());
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int ch = sc.nextInt();
        int size = sc.nextInt();

        if (ch == 1) {
            Integer[] integerData = new Integer[size];
            for (int i = 0; i < size; i++) {
                integerData[i] = sc.nextInt();
            }
            DataAnalyzer<Integer> integerAnalyzer = new DataAnalyzer<>(integerData);
            integerAnalyzer.dataSummary();
        } else if (ch == 2) {
            Double[] doubleData = new Double[size];
            for (int i = 0; i < size; i++) {
                doubleData[i] = sc.nextDouble();
            }
            DataAnalyzer<Double> doubleAnalyzer = new DataAnalyzer<>(doubleData);
            doubleAnalyzer.dataSummary();
        } else if (ch == 3) {
            Short[] shortData = new Short[size];
            for (int i = 0; i < size; i++) {
                shortData[i] = sc.nextShort();
            }
            DataAnalyzer<Short> shortAnalyzer = new DataAnalyzer<>(shortData);
            shortAnalyzer.dataSummary();
        } else if (ch == 4) {
            Float[] floatData = new Float[size];
            for (int i = 0; i < size; i++) {
                floatData[i] = sc.nextFloat();
            }
            DataAnalyzer<Float> floatAnalyzer = new DataAnalyzer<>(floatData);
            floatAnalyzer.dataSummary();
        }

        sc.close();
    }
}